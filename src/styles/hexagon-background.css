.main-content {
  position: relative;
  z-index: 1;
}

.hexagon-background-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  /* Not setting height to 100% ensures it doesn't extend past content */
  bottom: 0;
  z-index: 0;
  pointer-events: none;
  /* Stop at the hexagon-end-marker */
  height: calc(100% - 1px);
}

.hexagon-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 0;
  will-change: transform, opacity;
  transform: translateZ(0);
}

.hexagon-end-marker {
  position: relative;
  height: 1px;
  width: 100%;
  margin-bottom: 0;
  visibility: hidden;
}

.hexagon-row {
  display: inline-flex;
  margin-top: -32px;
  margin-left: -50px;
}

.hexagon-row:nth-child(even) {
  margin-left: 1px;
}

.hexagon {
  position: relative;
  width: 100px;
  height: 110px;
  background-color: rgba(255, 255, 255, 0);
  margin: 2px;
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  transition: 0.5s;
  opacity: 0.4;
}

.hexagon::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 50%;
  height: 100%;
  pointer-events: none;
  background-color: rgba(255,255,255,0);
  z-index: 1;
}

.hexagon:hover {
  background-color: rgba(59, 130, 246, 0.0);
  transition: 0s;
  opacity: 0.8;
}

.cursor-effect {
  position: absolute;
  width: 200px;
  height: 200px;
  background: radial-gradient(circle, rgba(59, 130, 246, 0.2) 0%, rgba(29, 78, 216, 0.2) 50%, transparent 70%);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
  z-index: 1;
  filter: blur(30px);
  will-change: transform, opacity;
  transform: translateZ(0);
}

@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

@keyframes twinkle {
  0% { opacity: 0.3; transform: scale(1); }
  50% { opacity: 1; transform: scale(1.2); }
  100% { opacity: 0.3; transform: scale(1); }
}

@keyframes pulse {
  0%, 100% { opacity: 0.6; transform: scale(1); }
  50% { opacity: 1; transform: scale(1.05); }
}

@keyframes orb-move {
  0% { transform: translate(0, 0); }
  33% { transform: translate(20px, -30px); }
  66% { transform: translate(-20px, 30px); }
  100% { transform: translate(0, 0); }
}

@keyframes slow-spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-pulse-slow {
  animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.animate-slow-spin {
  animation: slow-spin 20s linear infinite;
}

.stars-container {
  position: absolute;
  width: 100%;
  height: 100%;
}

.star {
  position: absolute;
  width: 2px;
  height: 2px;
  background-color: #fff;
  border-radius: 50%;
  animation: twinkle 5s infinite;
  will-change: transform, opacity;
  transform: translateZ(0);
}

.orbs-container {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.orb {
  position: absolute;
  border-radius: 50%;
  filter: blur(40px);
  animation: orb-move 25s ease-in-out infinite;
  will-change: transform, opacity;
  transform: translateZ(0);
}

.super-gradient-text {
  color: white; /* Fallback color */
  background: linear-gradient(to right, #ffffff, #60a5fa, #818cf8, #ffffff);
  background-size: 200% auto;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-fill-color: transparent;
  animation: text-shine 8s linear infinite;
  filter: drop-shadow(0 0 2px rgba(255, 255, 255, 0.3)); /* Add subtle glow */
}

.gradient-text-blue {
  background: linear-gradient(to right, #60a5fa, #818cf8);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

@keyframes text-shine {
  from { background-position: 0% center; }
  to { background-position: 200% center; }
}

.typing-animation-1, .typing-animation-2,
.typing-animation-response-1, .typing-animation-response-2 {
  position: relative;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
}

.typing-animation-1 {
  width: 0;
  animation: typing 1s steps(20) forwards;
}

.typing-animation-response-1 {
  width: 0;
  animation: typing 1.5s steps(40) 1s forwards;
}

.typing-animation-2 {
  width: 0;
  animation: typing 1.5s steps(40) 3s forwards;
}

.typing-animation-response-2 {
  width: 0;
  animation: typing 1s steps(30) 4.5s forwards;
}

.bg-grid-pattern {
  background-image: 
    linear-gradient(to right, rgba(59, 130, 246, 0.1) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(59, 130, 246, 0.1) 1px, transparent 1px);
  background-size: 40px 40px;
}

.perspective-container {
  transform-style: preserve-3d;
  perspective: 1000px;
}

/* Fix for gradient text visibility */
.heading-gradient {
  color: white; /* Fallback color */
  background: linear-gradient(to right, #ffffff, #60a5fa, #818cf8, #ffffff);
  background-size: 200% auto;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-fill-color: transparent;
  animation: text-shine 8s linear infinite;
  display: inline-block; /* Ensures the gradient applies properly */
  filter: drop-shadow(0 0 2px rgba(255, 255, 255, 0.3)); /* Add subtle glow */
}

/* Enhanced gradient text with better glow effects */
.enhanced-gradient-heading {
  color: white; /* Fallback color */
  background: linear-gradient(120deg, #ffffff, #60a5fa, #818cf8, #6366f1, #ffffff);
  background-size: 200% auto;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-fill-color: transparent;
  animation: enhanced-text-shine 6s ease infinite;
  display: inline-block; /* Ensures the gradient applies properly */
  filter: drop-shadow(0 0 4px rgba(96, 165, 250, 0.5)); /* Enhanced glow */
  letter-spacing: -0.03em;
}

@keyframes enhanced-text-shine {
  0% { background-position: 0% center; }
  50% { background-position: 100% center; }
  100% { background-position: 0% center; }
}

/* Subtle text glow effect for paragraphs */
.glow-text {
  text-shadow: 0 0 15px rgba(96, 165, 250, 0.2);
}

/* Noise texture for background depth */
.bg-noise-texture {
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='1'/%3E%3C/svg%3E");
  background-repeat: repeat;
  background-size: 200px 200px;
}

/* Animation delays for staggered animations */
.animate-delay-1000 {
  animation-delay: 1s;
}

.animate-delay-2000 {
  animation-delay: 2s;
}

/* Add smooth card hover transitions */
.card-hover-effect {
  transition: transform 0.3s ease-out, box-shadow 0.3s ease-out;
}

.card-hover-effect:hover {
  transform: translateY(-8px);
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

/* Optimize animation performance with GPU acceleration */
.hexagon-container, 
.cursor-effect,
.star,
.orb {
  will-change: transform, opacity;
  transform: translateZ(0);
}

/* Video card transitions */
.video-card-enter {
  opacity: 0;
  transform: scale(1.05);
}

.video-card-enter-active {
  opacity: 1;
  transform: scale(1);
  transition: opacity 500ms, transform 500ms;
}

.video-card-exit {
  opacity: 1;
  transform: scale(1);
}

.video-card-exit-active {
  opacity: 0;
  transform: scale(0.95);
  transition: opacity 500ms, transform 500ms;
}

/* Hulu-style hover effect */
.hulu-card-hover {
  transition: transform 300ms cubic-bezier(0.34, 1.56, 0.64, 1);
}

.hulu-card-hover:hover {
  transform: scale(1.05);
  z-index: 10;
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.5);
}

/* Add animated gradient for video cards */
@keyframes gradient-x {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

.animate-gradient-x {
  background-size: 200% 200%;
  animation: gradient-x 3s ease infinite;
}

/* Enhanced video card hover effects */
.video-card {
  transform-origin: center;
  backface-visibility: hidden;
}

.video-card-container {
  container-type: inline-size;
  container-name: video-grid;
}

@container video-grid (min-width: 768px) {
  .video-card {
    transition: transform 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
  }
  
  .video-card:hover {
    transform: scale(1.08);
    z-index: 10;
  }
}

